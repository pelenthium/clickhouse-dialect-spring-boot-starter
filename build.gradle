plugins {
    id 'nebula.release' version '16.0.0'
    id 'nebula.source-jar' version '18.1.0'
    id 'nebula.javadoc-jar' version '18.1.0'
    id 'nebula.maven-manifest' version '18.1.0'
    id 'nebula.maven-publish' version '18.1.0'
    id 'nebula.maven-scm' version '18.1.0'
    id 'nebula.maven-developer' version '18.1.0'
    id 'nebula.publish-verification' version '18.1.0'
    id 'nebula.maven-apache-license' version '18.1.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'signing'
}

apply plugin: 'java'
apply plugin: 'nebula.release'
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.javadoc-jar'
apply plugin: 'nebula.maven-manifest'
apply plugin: 'nebula.maven-scm'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.info'
apply plugin: 'nebula.maven-developer'
apply plugin: 'nebula.contacts'
apply plugin: 'nebula.publish-verification'
apply plugin: 'io.github.gradle-nexus.publish-plugin'
apply plugin: 'signing'

contacts {
    'pelenthium@gmail.com' {
        moniker 'Sergei Lugovoi'
        github 'pelenthium'
    }
}

group = 'io.github.pelenthium'
archivesBaseName="clickhouse-dialect-spring-boot-starter"
description="Clickhose Spring JDBC dialect"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc:${springVersion}"
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
        }
    }
}

signing {
    useInMemoryPgpKeys(base64Decode("signingKey"), base64Decode("signingPassword"))
    sign(publishing.publications)
}

def base64Decode(String prop) {
    def val = project.findProperty(prop);
    return val ?
        new String(Base64.getDecoder().decode(val.toString())).trim()
    : ""
}
